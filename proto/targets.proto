syntax = "proto3";
package targets;

import "common.proto";

/// Describes a target *
message Target {
    // the name of the target (case insensitive)
    // ex: "maindb"
    string name = 1;

    // the type of target (case insensitive)
    // ex: "database"
    string typestr = 2; 

    // the supported actions for this target 
    repeated string actions = 3;

    // target attributes
    map<string, common.AttributeValues> attributes = 4;
}

/// Request message for adding a new target
message AddTargetRequest {
    // the nameentity of the target (case insensitive)
    // ex: "maindb"
    string name = 1;

    // the type of target (case insensitive)
    // ex: "database"
    string typestr = 2; 

    // (Optional) list of actions to register for this target
    repeated string actions = 3;

    // target attributes
    map<string, common.AttributeValues> attributes = 4;
}

/// Request to modify a target
message ModifyTargetRequest {
    // the nameentity of the target (case insensitive)
    // ex: "maindb"
    string name = 1;

    // the type of target (case insensitive)
    // ex: "database"
    string typestr = 2; 

    // list of actions to add
    repeated string add_actions = 3;

    // list of attributes to add
    map<string, common.AttributeValues> add_attributes = 4;

    // list of actions to add
    repeated string remove_actions = 5;

    // list of attributes to add
    map<string, common.AttributeValues> remove_attributes = 6;
}

/// Request to add actions to an existing target
message RemoveTargetRequest {
    // the nameentity of the target (case insensitive)
    // ex: "maindb"
    string name = 1;

    // the type of target (case insensitive)
    // ex: "database"
    string typestr = 2; 
}

/// Request a list of all targets
message GetTargetsRequest {
    // optional name to filter by the name
    optional string name = 1;

    // the optional type to limit responses
    optional string typestr = 2;
}

/// The single target response
message TargetResponse {
    // the target
    Target target = 1;
}

/// A response with multiple targets */
message MultiTargetResponse {
    // list of targets
    repeated Target targets = 1;
}